From d52c34524a03a7d8c8f09c98dc85df90571b3239 Mon Sep 17 00:00:00 2001
From: Amine Khaldi <amine.khaldi@reactos.org>
Date: Sat, 21 Mar 2015 18:24:52 +0100
Subject: [PATCH 11/17] Simplify EscapeTargetForVariable and apply a naming
 convention that works for us without too much verbosity.

---
 Source/cmNinjaTargetGenerator.cxx | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/Source/cmNinjaTargetGenerator.cxx b/Source/cmNinjaTargetGenerator.cxx
index 49298c18e..8f7ed4b68 100644
--- a/Source/cmNinjaTargetGenerator.cxx
+++ b/Source/cmNinjaTargetGenerator.cxx
@@ -124,17 +124,17 @@ void cmNinjaTargetGenerator::AddFeatureFlags(std::string& flags,
 static void EscapeTargetForVariable(std::string& name)
 {
   // '.' is not allowed in variable names, so escape them.
-  cmSystemTools::ReplaceString(name, "dot", "dotdot");
-  cmSystemTools::ReplaceString(name, ".", "ldot");
+  cmSystemTools::ReplaceString(name, ".", "_");
   // '+' is not allowed in variable names, so escape them.
-  cmSystemTools::ReplaceString(name, "plus", "plusplus");
-  cmSystemTools::ReplaceString(name, "+", "lplus");
+  cmSystemTools::ReplaceString(name, "+", "_");
 }
 
 std::string
 cmNinjaTargetGenerator::OrderDependsTargetForTarget()
 {
-  return "cmake_order_depends_target_" + this->GetTargetName();
+  std::string targetName = this->GetTargetName();
+  EscapeTargetForVariable(targetName);
+  return targetName + "_orderdeps";
 }
 
 std::string
@@ -142,7 +142,7 @@ cmNinjaTargetGenerator::FlagVariableForTarget(std::string const& lang)
 {
   std::string targetName = this->GetTargetName();
   EscapeTargetForVariable(targetName);
-  return "cmake_flags_target_" + targetName + "_lang_" + lang;
+  return targetName + "_" + lang + "_flags";
 }
 
 std::string
@@ -150,7 +150,7 @@ cmNinjaTargetGenerator::DefineVariableForTarget(std::string const& lang)
 {
   std::string targetName = this->GetTargetName();
   EscapeTargetForVariable(targetName);
-  return "cmake_defines_target_" + targetName + "_lang_" + lang;
+  return targetName + "_" + lang + "_defines";
 }
 
 std::string
-- 
2.17.1

